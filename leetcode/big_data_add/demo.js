var num
var num2 = '22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222';
// console.log(num1 + num2);
// typeof infinity NaN 均为数值


function addTwoNumbers(str1, str2) {
    let carry = 0,//是否有进位 0无1有
        l1 = str1.length,//数字1的长度
        l2 = str2.length,//数字2的长度
        arr = [];//为变成字符串大值做准备
    // 倒着加，加到哪里未知？
    var max = Math.max(l1, l2);//最大长度
    // 倒着循环，退出条件是最大值的[0]
    // 统一为相加再加之前的进位，进位即是flag，有事要加的值
    for (let i = l1 - 1, j = l2 - 1, n = max - 1; n >= 0; n-- , i-- , j--) {
        // +str[i]字符串转数值
        var sum = (+str1[i] || 0 )+ (+str2[j] || 0) + carry;//位数不够 会导致剪到负数
        // 设置carry 
        if (sum >= 10) {
            carry = 1;
            // 进位
            arr.push(sum - 10);//将此进位交给更高一位处理
        } else {
            carry = 0;
            arr.push(sum);
        }
    }
    // 最高位可能存在进位
    if (carry > 0) {
        arr.push(carry);
    }
    // 反转为数值
    return arr.reverse().join('');
}
console.log(addTwoNumbers(num1, num2));